#!/bin/sh

system_type=$(uname -s)
is_sudo=$(sh -c "sudo -vn 2>&1 && echo password" | grep -c password)

if [ "$system_type" = "Darwin" ] && [ $is_sudo = 1 ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  echo "Installing homebrew packages"
  # gawk is left out because it conflicts with emacs-plus
  brew bundle -v --no-lock --file=/dev/stdin <<EOF
tap "clasp-developers/clasp"
tap "d12frosted/emacs-plus"
tap "homebrew/bundle"
tap "homebrew/cask-fonts"
tap "homebrew/cask-versions"
tap "homebrew/command-not-found"
tap "homebrew/services"
brew "freetype"
brew "glib"
brew "pkg-config"
brew "cairo"
brew "harfbuzz"
brew "lz4"
brew "zstd"
brew "rlwrap"
brew "abcl"
brew "act"
brew "pango"
brew "librsvg"
brew "sdl2"
brew "flac"
brew "python@3"
brew "ansible"
brew "hwloc"
brew "open-mpi"
brew "fftw"
brew "fmt"
brew "openblas"
brew "aspell"
brew "automake"
brew "bear"
brew "binutils"
brew "node"
brew "bitwarden-cli"
brew "boost"
brew "boost-mpi"
brew "bzip2"
brew "ccache"
brew "eigen"
brew "gnutls"
brew "libtool"
brew "chromaprint"
brew "clang-format"
brew "cloc"
brew "cmake"
brew "cmake-docs"
brew "cookiecutter"
brew "coreutils"
brew "dbus"
brew "libgpg-error"
brew "gnupg"
brew "poppler"
brew "diff-pdf"
brew "difftastic"
brew "doctest"
brew "doxygen"
brew "ecl"
brew "editorconfig"
brew "tree-sitter"
brew "enchant"
brew "exercism"
brew "exiftool"
brew "exiv2"
brew "fd"
brew "fdupes"
brew "ffmpeg"
brew "findutils"
brew "gawk"
brew "git"
brew "git-absorb"
brew "git-lfs"
brew "glfw"
brew "glslang"
brew "gmime"
brew "qt"
brew "gnuplot"
brew "gobject-introspection"
brew "googletest"
brew "graphviz"
brew "pygobject3"
brew "gstreamer"
brew "gzip"
brew "libomp"
brew "inetutils"
brew "ipython"
brew "isync"
brew "jq"
brew "languagetool"
brew "latexindent"
brew "libffi"
brew "libgccjit"
brew "libolm"
brew "libvirt"
brew "libvterm"
brew "libzip"
brew "llm"
brew "llvm"
brew "luajit"
brew "man-db"
brew "mas"
brew "mdv"
brew "mercurial"
brew "ninja"
brew "meson"
brew "mkcert"
brew "pugixml"
brew "mkvtoolnix"
brew "molten-vk"
brew "mp3gain"
brew "mp3val"
brew "mpi4py"
brew "xapian"
brew "mu"
brew "ncurses"
brew "open-scene-graph"
brew "openal-soft"
brew "opencl-headers"
brew "opencl-clhpp-headers"
brew "vtk"
brew "opencv"
brew "p7zip"
brew "pandoc"
brew "pdf2svg"
brew "pinentry-mac"
brew "pngpaste"
brew "podman", restart_service: true
brew "podman-compose"
brew "pre-commit"
brew "ripgrep"
brew "roswell"
brew "rsync"
brew "rust"
brew "rust-analyzer"
brew "rustc-completion"
brew "rustfmt"
brew "sbcl"
brew "sdl2_image"
brew "sdl2_ttf"
brew "shellcheck"
brew "sound-touch"
brew "spirv-cross"
brew "spirv-headers"
brew "spirv-tools"
brew "subversion"
brew "tectonic"
brew "terminal-notifier"
brew "texinfo"
brew "tree"
brew "vcpkg"
brew "virt-manager"
brew "vulkan-headers"
brew "watchman"
brew "wget"
brew "wordnet"
brew "xdg-ninja"
brew "yadm"
brew "yamllint"
brew "zlib-ng"
brew "clasp-developers/clasp/clasp-cl"
brew "d12frosted/emacs-plus/emacs-plus@29", args: ["with-dbus", "with-elrumo1-icon", "with-native-comp", "with-no-frame-refocus", "with-poll", "with-xwidgets"]
cask "appcleaner"
cask "balenaetcher"
cask "chromium"
cask "firefox"
cask "firefox-developer-edition"
cask "font-alegreya"
cask "font-fira-code-nerd-font"
cask "font-fontawesome"
cask "font-ibm-plex-mono"
cask "font-inconsolata-nerd-font"
cask "font-jetbrains-mono"
cask "font-jetbrains-mono-nerd-font"
cask "font-jsmath-cmbx10"
cask "font-juliamono"
cask "font-overpass"
cask "grandperspective"
cask "hammerspoon"
cask "karabiner-elements"
cask "mysides"
cask "nextcloud"
cask "podman-desktop"
cask "rar"
cask "stats"
cask "tailscale"
cask "temurin"
cask "tex-live-utility"
cask "transmission"
cask "utm"
cask "vlc"
cask "xquartz"
mas "AdGuard for Safari", id: 1440147259
mas "Jiffy", id: 1502527999
mas "Jiffy reader", id: 6444754311
mas "Xcode", id: 497799835
EOF

# start hammerspoon at login
osascript -e 'tell application "System Events" to make login item at end with properties {path:"/Applications/Hammerspoon.app", hidden:false}' &> /dev/null

# start nextcloud at login
osascript -e 'tell application "System Events" to make login item at end with properties {path:"/Applications/Nextcloud.app", hidden:false}' &> /dev/null

# open so that we can grant permissions
open -a Karabiner-Elements
open -a Stats
open -a Hammerspoon

fi
